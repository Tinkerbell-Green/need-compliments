import {NextPage} from "next";
import {useCallback} from "react";
import {Snackbar,SnackbarProps} from "components/atoms/snackbar"
import {useSnackbarifyState,Snackbarify} from "utils/snackbarify";

const SnackbarContextTestPage: NextPage = () => {
  const {setIsSnackbarVisible,setSnackbarProps} = useSnackbarifyState();
  
  const handleSnackbarChange = useCallback((newProps?) => {
    setSnackbarProps((state)=>{
      const newState:SnackbarProps = state ? {...state,...newProps} : newProps;
      return newState;
    });
    setIsSnackbarVisible(true);
  }, [setSnackbarProps,setIsSnackbarVisible]);

  return (<>
    <Snackbarify Snackbar={Snackbar}/>
    <div style={{flexDirection:"column"}}>
      <button style={{padding: "20px", textAlign: "left"}} 
        onClick={()=>handleSnackbarChange({message: "Îç∞Ïù¥ÌÑ∞Í∞Ä ÏÑ±Í≥µÏ†ÅÏúºÎ°ú Ï†ÄÏû•Ï†ÄÏû• ÏôÑÎ£åÏôÑÎ£å",type:"success"})}>
        ‚úÖ Show Success
      </button>
      <button style={{padding: "20px", textAlign: "left"}}
        onClick={()=>handleSnackbarChange({message: "ÏùºÏãúÏ†ÅÏúºÎ°ú Ï†ÄÏû• Ïã§Ìå®Ïã§Ìå® ÏóêÎü¨ÏóêÎü¨",type:"error"})}>
				‚ùå Show Error
      </button>
      <button style={{padding: "20px", textAlign: "left"}}
        onClick={()=>handleSnackbarChange({message: "Ïù¥Í±∞Ïä® Ï†ïÎ≥¥ÏûÖÎãàÎã§. Ï†ïÎ≥¥Ï†ïÎ≥¥",type:"information"})}>
				üîµ Show Information
      </button>
      <button style={{padding: "20px", textAlign: "left"}}
        onClick={()=>handleSnackbarChange({message: "Í≤ΩÍ≥†ÌïúÎã§ Í≤ΩÍ≥†ÌûåÎã§",type:"warning"})}>
				‚ö†Ô∏è Show Warning
      </button>
    </div>
  </>
  );
};

export default SnackbarContextTestPage;
