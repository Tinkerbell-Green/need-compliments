import {NextPage} from "next";
import {useCallback,useState,useEffect} from "react";
import {Snackbar,SnackbarProps} from "components/atoms/snackbar";
import {useSnackbar} from "utils/snackbarify/snackbarHooks";

const SnackbarTestPage: NextPage = () => {
  const [snackbarProps,setSnackbarProps] = useState<SnackbarProps>({message:"", isVisible: false,duration: 3000})

  const snackbarComponent = useCallback(()=>{
    return (<Snackbar {...snackbarProps}></Snackbar>)}
  ,[snackbarProps]);
  
  const {isSnackbarVisible, setIsSnackbarVisible,snackbarifyContainer} = useSnackbar(snackbarComponent, 3000);

  const handleSnackbarHideClick = useCallback(() => {
    setSnackbarProps((state)=>({...state, isVisible: false}))
    setIsSnackbarVisible(false)
  }, [setSnackbarProps,setIsSnackbarVisible]);
  
  const handleSnackbarChange = useCallback((newProps) => {
    setSnackbarProps((state)=>({...state,...newProps, isVisible: true, onCloseClick:handleSnackbarHideClick}))
    setIsSnackbarVisible(true);
  }, [setSnackbarProps,handleSnackbarHideClick,setIsSnackbarVisible]);

  useEffect(() => {
    if(!isSnackbarVisible.value){
      handleSnackbarHideClick();
    }
  }, [isSnackbarVisible.value,handleSnackbarHideClick])
  


  return (
    <div style={{flexDirection:"column"}}>
      {snackbarifyContainer}
      <button style={{padding: "20px", textAlign: "left"}} 
        onClick={()=>handleSnackbarChange({message: "Îç∞Ïù¥ÌÑ∞Í∞Ä ÏÑ±Í≥µÏ†ÅÏúºÎ°ú Ï†ÄÏû•Ï†ÄÏû• ÏôÑÎ£åÏôÑÎ£å",type:"success"})}>
        ‚úÖ Show Success
      </button>
      <button style={{padding: "20px", textAlign: "left"}}
        onClick={()=>handleSnackbarChange({message: "ÏùºÏãúÏ†ÅÏúºÎ°ú Ï†ÄÏû• Ïã§Ìå®Ïã§Ìå® ÏóêÎü¨ÏóêÎü¨",type:"error"})}>
				‚ùå Show Error
      </button>
      <button style={{padding: "20px", textAlign: "left"}}
        onClick={()=>handleSnackbarChange({message: "Ïù¥Í±∞Ïä® Ï†ïÎ≥¥ÏûÖÎãàÎã§. Ï†ïÎ≥¥Ï†ïÎ≥¥",type:"information"})}>
				üîµ Show Information
      </button>
      <button style={{padding: "20px", textAlign: "left"}}
        onClick={()=>handleSnackbarChange({message: "Í≤ΩÍ≥†ÌïúÎã§ Í≤ΩÍ≥†ÌûåÎã§",type:"warning"})}>
				‚ö†Ô∏è Show Warning
      </button>
      <button style={{padding: "20px", textAlign: "left"}} onClick={handleSnackbarHideClick}>
				Hide
      </button>
      {snackbarifyContainer}
    </div>
  );
};

export default SnackbarTestPage;
