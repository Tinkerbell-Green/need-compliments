import {NextPage} from "next";
import {useCallback} from "react";
import {Snackbar,SnackbarProps} from "components/atoms/snackbar";
import {useSnackbar} from "utils/snackbarify/snackbarHooks";

const SnackbarTestPage: NextPage = () => {
  const handleSnackbarHideClick = useCallback(() => {
    setIsSnackbarVisible(false);
  // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []);
  
  const {isSnackbarVisible, 
    setIsSnackbarVisible, 
    snackbarOptions,
    setSnackbarOptions,
    snackbarifyContainer
  } = useSnackbar(Snackbar,4000,{message:"", duration: 4000, onCloseClick:handleSnackbarHideClick});
  
  const handleSnackbarShowClick = useCallback((newProps) => {
    setSnackbarOptions({...snackbarOptions, ...newProps})
    setIsSnackbarVisible(true);
  }, [setSnackbarOptions,setIsSnackbarVisible,snackbarOptions]);

  return (
    <div style={{flexDirection:"column"}}>
      {snackbarifyContainer}
      <button style={{padding: "20px"}} 
        onClick={()=>handleSnackbarShowClick({message: "Îç∞Ïù¥ÌÑ∞Í∞Ä ÏÑ±Í≥µÏ†ÅÏúºÎ°ú Ï†ÄÏû•ÎêòÏóàÏäµÎãàÎã§.",type:"success"})}>
        Show Success ‚úÖ 
      </button>
      <button style={{padding: "20px"}}
        onClick={()=>handleSnackbarShowClick({message: "ÏùºÏãúÏ†ÅÏúºÎ°ú Îç∞Ïù¥ÌÑ∞ Ï†ÄÏû•Ïóê Ïã§Ìå®ÌïòÏòÄÏäµÎãàÎã§.",type:"error"})}>
				Show Error ‚ùå 
      </button>
      <button style={{padding: "20px"}}
        onClick={()=>handleSnackbarShowClick({message: "Ïù¥Í±∞Ïä® Ï†ïÎ≥¥ÏûÖÎãàÎã§. Ï†ïÎ≥¥Ï†ïÎ≥¥",type:"information"})}>
				Show Information üîµ 
      </button>
      <button style={{padding: "20px"}}
        onClick={()=>handleSnackbarShowClick({message: "Í≤ΩÍ≥†Í≤ΩÍ≥†",type:"warning"})}>
				Show Warning ‚ö†Ô∏è 
      </button>
      <button style={{padding: "20px"}} onClick={handleSnackbarHideClick}>
				Hide Snackbar
      </button>
      {snackbarifyContainer}
    </div>
  );
};

export default SnackbarTestPage;
